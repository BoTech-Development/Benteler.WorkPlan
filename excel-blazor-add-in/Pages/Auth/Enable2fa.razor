@page "/auth/enable2fa"
@using Benteler.WorkPlan.Api.SharedModels.Authentication.Dto
@using Benteler.WorkPlan.Api.SharedModels.Authentication.Result
@using Benteler.WorkPlan.Web.Api
@using Benteler.WorkPlan.Web.Components
@using BitzArt.Blazor.Cookies
@using ZXing

@inject ICookieService CookieService
<MudStack>
	<MudItem>
		<MudText Typo="Typo.h4" Class="pa-4">Enable 2FA</MudText>
	</MudItem>
	@if(TwoFaInfo != null){
		<MudItem>
			<MudStack>
				<MudPaper Class="pa-4">
					<MudText Typo="Typo.body1">
						Please download an Authenticator app like Authenticator from Microsoft
						<MudLink Href="https://support.microsoft.com/de-de/account-billing/microsoft-authenticator-herunterladen-351498fc-850a-45da-b7b6-27e523b8702a">
							How to install Authenticator
						</MudLink>
						After that scan the Qr code with your Authenticator app or enter the displayed credentials manually.
					</MudText>
				</MudPaper>
				<MudPaper>
					<MudStack Row="true">
						<MudItem>
							<MudBarcode BarcodeFormat="BarcodeFormat.QR_CODE"
								        @bind-Value="TwoFaInfo.Uri"/>
						</MudItem>
						<MudItem>
							<MudText><b>Uri:</b> @TwoFaInfo.Uri</MudText>
							<MudText><b>Key:</b> @TwoFaInfo.Key</MudText>
							<MudText><b>Issuer:</b> @TwoFaInfo.Issuer</MudText>
							<MudText><b>Email (Your Email):</b> @TwoFaInfo.Email</MudText>
						</MudItem>
					</MudStack>
				</MudPaper>
			</MudStack>
		</MudItem>
		<MudItem>
			<MudStack>
				<MudText>Please enter the code that will be displayed in the Authenticator-App.</MudText>
				<MudStack Row="true">
					<MudTextField T="string"
								  Label="Code"
								  Variant="Variant.Outlined"
								  Required="true"
								  FullWidth="true"
								  @bind-Value="@Code" />
					<LoadingButton Text="Verify"
								   LoadingText="Verifying your code..."
								   TaskToProcess="VerifyCode" />
				</MudStack>
			</MudStack>
		</MudItem>
	}
	else
	{
		<MudItem>
			<MudText>Loading 2FA information...</MudText>
		</MudItem>
	}
	</MudStack>

<ErrorDialog ErrorMessage="@ErrorMessage" IsErrorDialogOpen="@IsErrorDialogOpen"/>

	@code {
	[Inject] public NavigationManager NavigationManager { get; set; } = default!;

	[Parameter]
	[SupplyParameterFromQuery(Name = "lastPage")]
	public string? LastPage { get; set; }

	[Parameter]
	[SupplyParameterFromQuery(Name = "email")]
	public string? Email { get; set; }

	/// <summary>
	/// The entered code from the Authenticator app
	/// </summary>
	private string Code = string.Empty;

	private string ErrorMessage { get; set; }
	private bool IsErrorDialogOpen { get; set; } = false;

	public Generated2FaInfo? TwoFaInfo { get; set; } = null;

	protected override void OnInitialized()
	{
		Load2FaInfo();
	}

	private async Task Load2FaInfo()
	{
		ApiClient? client = null;
		if ((client = await ApiClient.GetInstance()) != null && Email != null)
		{
			Console.WriteLine("Loading 2FA info for email: " + Email);
			//Console.WriteLine("The Access Token is: " + client.AuthenticationClient.Token);
			try 
			{
				// Reload the login token to the runtime from the cookies
				client.AuthenticationClient.SaveLoginTokenToHttpRequestHelper(await client.AuthenticationClient.GetLoginTokenFromCookies(CookieService));
				TwoFaInfo = await client.AuthenticationClient.Generated2FaInfo(Email);
				Console.WriteLine("Loaded 2FA: " + TwoFaInfo.Email + " ; " + TwoFaInfo.Issuer + " ; " + TwoFaInfo.Key + " ; " + TwoFaInfo.Uri);
				this.StateHasChanged();
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
				ErrorMessage = "Could not load 2FA information. Please try again later. Or the api request throwed an error! \n" + ex.Message;
				IsErrorDialogOpen = true;
			}
		}
	}

	private async Task VerifyCode(LoadingButton button)
	{
		ApiClient? client = null;
		if ((client = await ApiClient.GetInstance()) != null && Email != null && Code != String.Empty)
		{
			try
			{
				if (await client.AuthenticationClient.Enable2Fa(new Enable2Fa(Email, Code)))
				{
					NavigationManager.NavigateTo($"/auth/Login?LastPage={LastPage}", true);
				}
				else
				{
					ErrorMessage = "The entered code is invalid. Please try again.";
					IsErrorDialogOpen = true;
				}
			}
			catch (Exception ex)
			{
				button.Processing = false;
				Console.WriteLine(ex.Message);
				ErrorMessage = "Could not verify 2FA code. Please try again later. The api request throwed an error! \n" + ex.Message;
				IsErrorDialogOpen = true;
			}
		
		}
	}

}
